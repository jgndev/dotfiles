# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$directory$vcsh$fossil_branch$fossil_metrics$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$pijul_channel$docker_context$package$bun$c$cmake$cobol$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$golang$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$opa$perl$php$pulumi$purescript$python$raku$rlang$red$ruby$rust$scala$solidity$swift$terraform$typst$vlang$vagrant$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage$aws$gcloud$openstack$azure$direnv$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character
"$schema" = "https://starship.rs/config-schema.json"
# format = "$all"
format = """
$duration\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$directory\
$status\
$character
"""
right_format = ""
continuation_prompt = "[∙](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = true
follow_symlinks = true

[git_branch]
format = "[$branch]($style)"
style = "bright-black"

[git_status]
format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218) ($ahead_behind$stashed)]($style)"
style = "cyan"
# conflicted = "​"
# untracked = "​"
# modified = "​"
# staged = "​"
# renamed = "​"
# deleted = "​"
# stashed = "≡"

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[palettes]

[profiles]

[aws]
# format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
format = 'AWS: [(\($region\) )(\[$duration\] )]($style)'
symbol = "☁️  "
style = "bold yellow"
disabled = false
expiration_symbol = "X"
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[azure]
format = "on [$symbol($subscription)]($style) "
symbol = "󰠅 "
style = "blue bold"
disabled = true

[azure.subscription_aliases]

[c]
format = "via [$symbol($version(-$name) )]($style)"
version_format = "v${raw}"
style = "149 bold"
symbol = "C "
disabled = false
detect_extensions = ["c", "h"]
detect_files = []
detect_folders = []
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]

[character]
format = "$symbol "
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"
vimcmd_symbol = "[❮](bold green)"
vimcmd_visual_symbol = "[❮](bold yellow)"
vimcmd_replace_symbol = "[❮](bold purple)"
vimcmd_replace_one_symbol = "[❮](bold purple)"
disabled = false

[cmake]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "△ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []

[conda]
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "🅒 "
style = "green bold"
ignore_base = true
disabled = false

[container]
format = '[$symbol \[$name\]]($style) '
symbol = "⬢"
style = "red bold dimmed"
disabled = false


[directory]
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = " [$path]($style)[$read_only]($read_only_style) "
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
disabled = false
read_only = "🔒"
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true

[directory.substitutions]

[direnv]
format = "[$symbol$loaded/$allowed]($style) "
symbol = "direnv "
style = "bold orange"
disabled = true
detect_extensions = []
detect_files = [".envrc"]
detect_folders = []
allowed_msg = "allowed"
denied_msg = "denied"
loaded_msg = "loaded"
unloaded_msg = "not loaded"

[docker_context]
symbol = "🐳 "
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
disabled = false
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[dotnet]
format = "via [$symbol($version )(🎯 $tfm )]($style)"
version_format = "v${raw}"
symbol = ".NET "
style = "blue bold"
heuristic = true
disabled = false
detect_extensions = ["csproj", "fsproj", "xproj"]
detect_files = [
  "global.json",
  "project.json",
  "Directory.Build.props",
  "Directory.Build.targets",
  "Packages.props",
]
detect_folders = []


[env_var]

[fill]
style = "bold black"
symbol = "."
disabled = false

[fossil_branch]
format = "on [$symbol$branch]($style) "
symbol = " "
style = "bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "…"
disabled = true

[fossil_metrics]
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
disabled = true

[gcloud]
# format = 'on [$symbol$account(@$domain)(\($region\))]($style) '
# format = 'on [$symbol$account(@$domain)(\($project\))]($style) '
# format = '[$account:$project]($style) '
# format = 'gcp [$symbol$account:$project]($style) '
format = 'GCP: [$project:($region)]($style) '
# symbol = "☁️  "
symbol = "☁️  "
style = "bold blue"
disabled = false
detect_env_vars = []

[gcloud.region_aliases]

[gcloud.project_aliases]

[golang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🐹 "
style = "bold cyan"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
  "go.mod",
  "go.sum",
  "go.work",
  "glide.yaml",
  "Gopkg.yml",
  "Gopkg.lock",
  ".go-version",
]
detect_folders = ["Godeps"]

[gradle]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🅶 "
style = "bold bright-cyan"
disabled = false
recursive = false
detect_extensions = ["gradle", "gradle.kts"]
detect_files = []
detect_folders = ["gradle"]

[guix_shell]
format = "via [$symbol]($style) "
symbol = "🐃 "
style = "yellow bold"
disabled = false

[helm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "⎈ "
style = "bold white"
disabled = false
detect_extensions = []
detect_files = ["helmfile.yaml", "Chart.yaml"]
detect_folders = []

[hg_branch]
symbol = " "
style = "bold purple"
format = "on [$symbol$branch(:$topic)]($style) "
truncation_length = 9223372036854775807
truncation_symbol = "…"
disabled = true

[hostname]
ssh_only = true
ssh_symbol = "🌐 "
trim_at = "."
detect_env_vars = []
format = "[$ssh_symbol$hostname]($style) in "
style = "green dimmed bold"
disabled = false

[java]
disabled = false
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
style = "red dimmed"
symbol = "☕ "
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]
detect_files = [
  "pom.xml",
  "build.gradle.kts",
  "build.sbt",
  ".java-version",
  "deps.edn",
  "project.clj",
  "build.boot",
  ".sdkmanrc",
]
detect_folders = []

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = "[$symbol$number]($style) "
symbol = "✦"
style = "bold blue"
disabled = false

[kotlin]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🅺 "
style = "bold blue"
kotlin_binary = "kotlin"
disabled = false
detect_extensions = ["kt", "kts"]
detect_files = []
detect_folders = []

[kubernetes]
symbol = "☸ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
disabled = true
detect_extensions = []
detect_files = []
detect_folders = []
contexts = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

[line_break]
disabled = false

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "yellow bold"
disabled = true

[lua]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🌙 "
style = "bold blue"
lua_binary = "lua"
disabled = false
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]

[memory_usage]
threshold = 75
format = "via $symbol[$ram( | $swap)]($style) "
style = "white bold dimmed"
symbol = "🐏 "
disabled = true

[meson]
truncation_length = 4294967295
truncation_symbol = "…"
format = "via [$symbol$project]($style) "
symbol = "⬢ "
style = "blue bold"
disabled = false

[nix_shell]
format = 'via [$symbol$state( \($name\))]($style) '
symbol = "❄️  "
style = "bold blue"
impure_msg = "impure"
pure_msg = "pure"
unknown_msg = ""
disabled = false
heuristic = false

[nodejs]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = " "
style = "bold green"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]

[openstack]
format = 'on [$symbol$cloud(\($project\))]($style) '
symbol = "☁️  "
style = "bold yellow"
disabled = false

[os]
format = "[$symbol]($style)"
style = "bold white"
disabled = true

[os.symbols]
Alpine = "🏔️ "
Amazon = "🙂 "
Android = "🤖 "
Arch = "🎗️ "
Artix = "🎗️ "
CentOS = "💠 "
Debian = "🌀 "
DragonFly = "🐉 "
Emscripten = "🔗 "
EndeavourOS = "🚀 "
Fedora = "🎩 "
FreeBSD = "😈 "
Garuda = "🦅 "
Gentoo = "🗜️ "
HardenedBSD = "🛡️ "
Illumos = "🐦 "
Linux = "🐧 "
Mabox = "📦 "
Macos = "🍎 "
Manjaro = "🥭 "
Mariner = "🌊 "
MidnightBSD = "🌘 "
Mint = "🌿 "
NetBSD = "🚩 "
NixOS = "❄️ "
OpenBSD = "🐡 "
OpenCloudOS = "☁️ "
openEuler = "🦉 "
openSUSE = "🦎 "
OracleLinux = "🦴 "
Pop = "🍭 "
Raspbian = "🍓 "
Redhat = "🎩 "
RedHatEnterprise = "🎩 "
Redox = "🧪 "
Solus = "⛵ "
SUSE = "🦎 "
Ubuntu = "🎯 "
Unknown = "❓ "
Windows = "🪟 "

[package]
format = "is [$symbol$version]($style) "
symbol = "📦 "
style = "208 bold"
display_private = false
disabled = false
version_format = "v${raw}"

[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = "v${raw}"
style = "yellow bold"
symbol = "🐍 "
disabled = false
detect_extensions = ["py"]
detect_files = [
  "requirements.txt",
  ".python-version",
  "pyproject.toml",
  "Pipfile",
  "tox.ini",
  "setup.py",
  "__init__.py",
]
detect_folders = []

[red]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🔺 "
style = "red bold"
disabled = false
detect_extensions = ["red", "reds"]
detect_files = []
detect_folders = []

[ruby]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "💎 "
style = "bold red"
disabled = false
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_folders = []
detect_variables = ["RUBY_VERSION", "RBENV_VERSION"]

[rust]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🦀 "
style = "bold red"
disabled = false
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[shell]
format = "[$indicator]($style) "
bash_indicator = "bsh"
fish_indicator = "fsh"
zsh_indicator = "zsh"
powershell_indicator = "psh"
ion_indicator = "ion"
elvish_indicator = "esh"
tcsh_indicator = "tsh"
nu_indicator = "nu"
xonsh_indicator = "xsh"
cmd_indicator = "cmd"
unknown_indicator = ""
style = "white bold"
disabled = true

[shlvl]
threshold = 2
format = "[$symbol$shlvl]($style) "
symbol = "↕️  "
repeat = false
repeat_offset = 0
style = "bold yellow"
disabled = true

[singularity]
symbol = ""
format = '[$symbol\[$env\]]($style) '
style = "blue bold dimmed"
disabled = false

[solidity]
format = "via [$symbol($version)]($style)"
version_format = "v${major}.${minor}.${patch}"
disabled = false
style = "bold blue"
symbol = "S "
compiler = ["solc"]
detect_extensions = ["sol"]
detect_files = []
detect_folders = []

[spack]
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "🅢 "
style = "blue bold"
disabled = false

[status]
format = "[$symbol$status]($style) "
symbol = "❌"
success_symbol = ""
not_executable_symbol = "🚫"
not_found_symbol = "🔍"
sigint_symbol = "🧱"
signal_symbol = "⚡"
style = "bold red"
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = "|"
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[sudo]
format = "[as $symbol]($style)"
symbol = "🧙 "
style = "bold blue"
allow_windows = false
disabled = true

[swift]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "🐦 "
style = "bold 202"
disabled = false
detect_extensions = ["swift"]
detect_files = ["Package.swift"]
detect_folders = []

[terraform]
format = "via [$symbol$workspace]($style) "
version_format = "v${raw}"
symbol = "💠 "
style = "bold 105"
disabled = false
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []
detect_folders = [".terraform"]

[time]
format = "at [$time]($style) "
style = "bold yellow"
use_12hr = false
disabled = true
utc_time_offset = "local"
time_range = "-"

[typst]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "t "
style = "bold #0093A7"
disabled = false
detect_extensions = ["typ"]
detect_files = ["template.typ"]
detect_folders = []

[username]
format = "[$user]($style) in "
style_root = "red bold"
style_user = "yellow bold"
show_always = false
disabled = false

[vagrant]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "⍱ "
style = "cyan bold"
disabled = false
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []

[vcsh]
symbol = ""
style = "bold yellow"
format = "vcsh [$symbol$repo]($style) "
disabled = false

[vlang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "V "
style = "blue bold"
disabled = false
detect_extensions = ["v"]
detect_files = ["v.mod", "vpkg.json", ".vpkg-lock.json"]
detect_folders = []

[zig]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "↯ "
style = "bold yellow"
disabled = false
detect_extensions = ["zig"]
detect_files = []
detect_folders = []

[custom]
