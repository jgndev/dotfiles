# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$nats$directory$vcsh$fossil_branch$fossil_metrics$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$pijul_channel$docker_context$package$bun$c$cmake$cobol$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$gleam$golang$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$odin$opa$perl$php$pulumi$purescript$python$quarto$raku$rlang$red$ruby$rust$scala$solidity$swift$terraform$typst$vlang$vagrant$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage$aws$gcloud$openstack$azure$direnv$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character
"$schema" = "https://starship.rs/config-schema.json"
# format = "$all"
format = """
$directory\
$git_branch\
$git_state\
$git_status\
$kubernetes\
$status\
$cmd_duration\
$line_break\
$character\
"""
right_format = ""
continuation_prompt = "[‚àô](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = true
follow_symlinks = true

[palettes]

[profiles]

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = "‚òÅÔ∏è  "
style = "bold yellow"
disabled = false
expiration_symbol = "X"
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[azure]
format = "on [$symbol($subscription)]($style) "
symbol = "Û∞†Ö "
style = "blue bold"
disabled = true

[azure.subscription_aliases]

[battery]
full_symbol = "Û∞Åπ "
charging_symbol = "Û∞ÇÑ "
discharging_symbol = "Û∞ÇÉ "
unknown_symbol = "Û∞ÅΩ "
empty_symbol = "Û∞Çé "
disabled = false
format = "[$symbol$percentage]($style) "

[[battery.display]]
threshold = 10
style = "red bold"

[buf]
format = "with [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "üêÉ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["buf.yaml", "buf.gen.yaml", "buf.work.yaml"]
detect_folders = []

[bun]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ü•ü "
style = "bold red"
disabled = false
detect_extensions = []
detect_files = ["bun.lockb", "bunfig.toml"]
detect_folders = []

[c]
format = "via [$symbol($version(-$name) )]($style)"
version_format = "v${raw}"
style = "149 bold"
symbol = "C "
disabled = false
detect_extensions = ["c", "h"]
detect_files = []
detect_folders = []
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]

[character]
format = "$symbol "
success_symbol = "[‚ùØ](bold green)"
error_symbol = "[‚ùØ](bold red)"
vimcmd_symbol = "[‚ùÆ](bold green)"
vimcmd_visual_symbol = "[‚ùÆ](bold yellow)"
vimcmd_replace_symbol = "[‚ùÆ](bold purple)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold purple)"
disabled = false

[cmake]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "‚ñ≥ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []

[cmd_duration]
format = "[$duration]($style) "
style = "yellow"

[directory]
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
disabled = false
read_only = "üîí"
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true

[directory.substitutions]

[docker_context]
symbol = "üê≥ "
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
disabled = false
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[git_branch]
format = "[$branch]($style)"
style = "bright-black"

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = "green bold"
only_detached = true
disabled = false
tag_symbol = " üè∑  "
tag_disabled = true
tag_max_candidates = 0

[git_metrics]
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
disabled = true
ignore_submodules = false

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[git_status]
format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](bright-black) ($ahead_behind$stashed)]($style)"
style = "cyan"
conflicted = "‚Äã"
untracked = "‚Äã"
modified = "‚Äã"
staged = "‚Äã"
renamed = "‚Äã"
deleted = "‚Äã"
stashed = "‚â°"

[golang]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "üêπ "
style = "bold cyan"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
  "go.mod",
  "go.sum",
  "go.work",
  "glide.yaml",
  "Gopkg.yml",
  "Gopkg.lock",
  ".go-version",
]
detect_folders = ["Godeps"]

[helm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "‚éà "
style = "bold white"
disabled = false
detect_extensions = []
detect_files = ["helmfile.yaml", "Chart.yaml"]
detect_folders = []

[hostname]
ssh_only = true
ssh_symbol = "üåê "
trim_at = "."
detect_env_vars = []
format = "[$ssh_symbol$hostname]($style) in "
style = "green dimmed bold"
disabled = false


[kubernetes]
symbol = "‚ò∏ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
disabled = true
detect_extensions = []
detect_files = []
detect_folders = []
detect_env_vars = []
contexts = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

[line_break]
disabled = false

[lua]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "üåô "
style = "bold blue"
lua_binary = "lua"
disabled = false
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]

[pulumi]
format = "via [$symbol($username@)$stack]($style) "
version_format = "v${raw}"
symbol = "ÔÜ≤ "
style = "bold 5"
disabled = false
search_upwards = true

[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = "v${raw}"
style = "yellow bold"
symbol = "üêç "
disabled = false
detect_extensions = ["py"]
detect_files = [
  "requirements.txt",
  ".python-version",
  "pyproject.toml",
  "Pipfile",
  "tox.ini",
  "setup.py",
  "__init__.py",
]
detect_folders = []

[rust]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "ü¶Ä "
style = "bold red"
disabled = false
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[shell]
format = "[$indicator]($style) "
bash_indicator = "bsh"
fish_indicator = "fsh"
zsh_indicator = "zsh"
powershell_indicator = "psh"
ion_indicator = "ion"
elvish_indicator = "esh"
tcsh_indicator = "tsh"
nu_indicator = "nu"
xonsh_indicator = "xsh"
cmd_indicator = "cmd"
unknown_indicator = ""
style = "white bold"
disabled = true

[shlvl]
threshold = 2
format = "[$symbol$shlvl]($style) "
symbol = "‚ÜïÔ∏è  "
repeat = false
repeat_offset = 0
style = "bold yellow"
disabled = true

[status]
format = "[$symbol$status]($style) "
symbol = "‚ùå"
success_symbol = ""
not_executable_symbol = "üö´"
not_found_symbol = "üîç"
sigint_symbol = "üß±"
signal_symbol = "‚ö°"
style = "bold red"
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = "|"
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[terraform]
format = "via [$symbol$workspace]($style) "
version_format = "v${raw}"
symbol = "üí† "
style = "bold 105"
disabled = false
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []
detect_folders = [".terraform"]

[time]
format = "at [$time]($style) "
style = "bold yellow"
use_12hr = false
disabled = true
utc_time_offset = "local"
time_range = "-"

[username]
detect_env_vars = []
format = "[$user]($style) in "
style_root = "red bold"
style_user = "yellow bold"
show_always = false
disabled = false

[username.aliases]

[vagrant]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "‚ç± "
style = "cyan bold"
disabled = false
detect_extensions = []
detect_files = ["Vagrantfile"]
detect_folders = []

[zig]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "‚ÜØ "
style = "bold yellow"
disabled = false
detect_extensions = ["zig"]
detect_files = []
detect_folders = []

[custom]
